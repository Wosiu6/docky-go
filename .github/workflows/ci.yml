name: CI
on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]
jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
      - name: Run tests
        run: go test ./...
      - name: Run coverage (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: go test -coverprofile=coverage.out ./...
      - name: Show coverage summary (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: go tool cover -func=coverage.out | grep total || true
      - name: Enforce fetcher coverage threshold (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          go tool cover -func=coverage.out | grep github.com/wosiu6/docky-go/internal/fetcher | awk '{print $3}' | sed 's/%//' | awk '{ if ($1 < 80.0) { printf "Fetcher coverage %s%% below threshold\n", $1; exit 1 } else { printf "Fetcher coverage %s%% OK\n", $1 } }'
      - name: Upload coverage artifact (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.out
